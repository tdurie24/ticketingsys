// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicketingSys.Data;

namespace TicketingSys.Data.Migrations
{
    [DbContext(typeof(TicketingDbContext))]
    [Migration("20190909193908_databaseSeedingIssueType")]
    partial class databaseSeedingIssueType
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TicketingSys.Domain.IssueSeverity", b =>
                {
                    b.Property<int>("IssueSeverityId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("IssueSeverityId");

                    b.ToTable("IssueSeverities");

                    b.HasData(
                        new
                        {
                            IssueSeverityId = 1,
                            Name = "High"
                        },
                        new
                        {
                            IssueSeverityId = 2,
                            Name = "Medium"
                        },
                        new
                        {
                            IssueSeverityId = 3,
                            Name = "Low"
                        });
                });

            modelBuilder.Entity("TicketingSys.Domain.IssueType", b =>
                {
                    b.Property<int>("IssueTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("IssueTypeId");

                    b.ToTable("IssueTypes");

                    b.HasData(
                        new
                        {
                            IssueTypeId = 1,
                            Name = "Technical"
                        },
                        new
                        {
                            IssueTypeId = 2,
                            Name = "Network"
                        },
                        new
                        {
                            IssueTypeId = 3,
                            Name = "Software"
                        },
                        new
                        {
                            IssueTypeId = 4,
                            Name = "Hardware"
                        });
                });

            modelBuilder.Entity("TicketingSys.Domain.ResolutionStatus", b =>
                {
                    b.Property<int>("ResolutionStatusId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ResolutionStatusId");

                    b.ToTable("ResolutionStatuses");

                    b.HasData(
                        new
                        {
                            ResolutionStatusId = 1,
                            Name = "Logged"
                        },
                        new
                        {
                            ResolutionStatusId = 2,
                            Name = "Active"
                        },
                        new
                        {
                            ResolutionStatusId = 3,
                            Name = "Resolved"
                        },
                        new
                        {
                            ResolutionStatusId = 4,
                            Name = "Closed"
                        });
                });

            modelBuilder.Entity("TicketingSys.Domain.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment");

                    b.Property<int>("IssueSeverityId");

                    b.Property<int>("IssueTypeId");

                    b.Property<int>("ResolutionStatusId");

                    b.Property<string>("ResolutionSteps");

                    b.Property<string>("TicketNumber");

                    b.Property<int>("UserId");

                    b.HasKey("TicketId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("TicketingSys.Domain.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateLogged");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<int>("UserRoleId");

                    b.Property<string>("Username");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TicketingSys.Domain.UserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("UserRoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserRoleId = 1,
                            Name = "User"
                        },
                        new
                        {
                            UserRoleId = 2,
                            Name = "Technician"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
